#include <stdio.h>
#include <stdlib.h>
#include <time.h>

#define MAX_SIZE 10

// Функция для создания случайной матрицы размером m * m
void createRandomMatrix(int m, int matrix[MAX_SIZE][MAX_SIZE]) {
    for (int i = 0; i < m; i++) {
        for (int j = 0; j < m; j++) {
            matrix[i][j] = rand() % 10;  // Генерация случайного числа от 0 до 9
        }
    }
}

// Функция для перемножения двух матриц
void multiplyMatrices(int m, int mat1[MAX_SIZE][MAX_SIZE], int mat2[MAX_SIZE][MAX_SIZE], int result[MAX_SIZE][MAX_SIZE]) {
    for (int i = 0; i < m; i++) {
        for (int j = 0; j < m; j++) {
            result[i][j] = 0;
            for (int k = 0; k < m; k++) {
                result[i][j] += mat1[i][k] * mat2[k][j];
            }
        }
    }
}

// Функция для сложения двух матриц
void addMatrices(int m, int mat1[MAX_SIZE][MAX_SIZE], int mat2[MAX_SIZE][MAX_SIZE], int result[MAX_SIZE][MAX_SIZE]) {
    for (int i = 0; i < m; i++) {
        for (int j = 0; j < m; j++) {
            result[i][j] = mat1[i][j] + mat2[i][j];
        }
    }
}

int main() {
    srand(time(NULL));  // Инициализация генератора случайных чисел

    int m;
    printf("Введите размер матрицы (не более %d): ", MAX_SIZE);
    scanf("%d", &m);

    int matrix1[MAX_SIZE][MAX_SIZE], matrix2[MAX_SIZE][MAX_SIZE];
    createRandomMatrix(m, matrix1);
    createRandomMatrix(m, matrix2);

    int resultMultiply[MAX_SIZE][MAX_SIZE], resultAdd[MAX_SIZE][MAX_SIZE];
    
    // Перемножение матриц
    multiplyMatrices(m, matrix1, matrix2, resultMultiply);
    
    // Сложение матриц
    addMatrices(m, matrix1, matrix2, resultAdd);

    // Печать результатов
    printf("Результат умножения матриц:\n");
    for (int i = 0; i < m; i++) {
        for (int j = 0; j < m; j++) {
            printf("%d ", resultMultiply[i][j]);
        }
        printf("\n");
    }

    printf("\nРезультат сложения матриц:\n");
    for (int i = 0; i < m; i++) {
        for (int j = 0; j < m; j++) {
            printf("%d ", resultAdd[i][j]);
        }
        printf("\n");
    }

    return 0;
}

